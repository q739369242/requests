{
  "uid" : "d7b9b9cb17c6500a",
  "name" : "TestLogin.test_login[case_data2]",
  "title" : "Test login [case_data2]",
  "time" : {
    "start" : 1559640099172,
    "stop" : 1559640099182,
    "duration" : 10
  },
  "summary" : {
    "attachments" : 0,
    "steps" : 0
  },
  "failure" : {
    "message" : "KeyError: 'cookies'",
    "stackTrace" : "self = <test_login.TestLogin object at 0x10f35b2e8>\ncase_data = {'address': '/postLogin', 'check': [{'check_type': 'entirely_check', 'expected_code': 200, 'expected_request': 'result.json'}], 'file': False, 'headers': {'X-Requested-With': 'XMLHttpRequest'}, ...}\n\n    @pytest.mark.parametrize(\"case_data\", case_dict[\"test_case\"])\n    @allure.story(\"登录\")\n    # @allure.issue(\"http://www.baidu.com\")  # bug地址\n    # @allure.testcase(\"http://www.testlink.com\")  # 用例连接地址\n    # @pytest.mark.flaky(reruns=3, reruns_delay=3)\n    def test_login(self, case_data):\n        \"\"\"\n        登录用例\n        :param case_data:\n        :return:\n        \"\"\"\n        # 参数化修改test_add_project 注释\n        for k, v in enumerate(case_dict[\"test_case\"]):  # 遍历用例文件中所有用例的索引和值\n            try:\n                if case_data == v:\n                    # 修改方法的__doc__在下一次调用时生效，此为展示在报告中的用例描述\n                    TestLogin.test_login.__doc__ = case_dict[\"test_case\"][k + 1][\"info\"]\n            except IndexError:\n                pass\n        # 发送测试请求\n>       api_send_check(case_data, case_dict, self.relevance, self.rel, PATH, self.result)\n\ntestcase/test_login.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ncommon/check_response.py:24: in api_send_check\n    project_dict[\"testinfo\"].get(\"address\"), relevance, _path, result)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata = {'address': '/postLogin', 'check': [{'check_type': 'entirely_check', 'expected_code': 200, 'expected_request': 'result.json'}], 'file': False, 'headers': {'X-Requested-With': 'XMLHttpRequest'}, ...}\nhost = '${debug_pre}$', address = '/postLogin'\nrelevance = {'auth': 'admin', 'email': 'wangjuan@user.com', 'password': '123456'}\n_path = '/Users/wangjuan/workpace/Aff_service/pages/login'\nsuccess = {'result': True}\n\n    def send_request(data, host, address, relevance, _path, success):\n        \"\"\"\n        封装请求\n        :param data: 测试用例\n        :param host: 测试host\n        :param address: 接口地址\n        :param relevance: 关联对象\n        :param _path: case路径\n        :param success: 全局结果\n        :return:\n        \"\"\"\n        logging.info(\"=\"*100)\n        header = read_param.read_param(data[\"test_name\"], data[\"headers\"], relevance, _path, success)\n>       if data[\"cookies\"] is True:\nE       KeyError: 'cookies'\n\ncommon/send_resquest.py:27: KeyError"
  },
  "description" : {
    "value" : "password正确",
    "type" : "TEXT"
  },
  "severity" : "NORMAL",
  "status" : "FAILED",
  "testId" : null,
  "suite" : {
    "uid" : "e4bacd867129de5f",
    "name" : "test_login",
    "title" : "Test login"
  },
  "steps" : [ ],
  "attachments" : [ ],
  "issues" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "用户登录场景"
  }, {
    "name" : "suite-name",
    "value" : "test_login"
  }, {
    "name" : "story",
    "value" : "登录"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "suite-title",
    "value" : null
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "host",
    "value" : "xiaoxideMacBook-Pro.local"
  }, {
    "name" : "thread",
    "value" : "26948-MainThread"
  }, {
    "name" : "language",
    "value" : "cpython3"
  } ],
  "parameters" : [ ]
}