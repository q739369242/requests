{
  "uid" : "e7fd18478d07ca98",
  "name" : "TestLogin.test_login[case_data0]",
  "title" : "Test login [case_data0]",
  "time" : {
    "start" : 1559291329056,
    "stop" : 1559291545351,
    "duration" : 216295
  },
  "summary" : {
    "attachments" : 8,
    "steps" : 3
  },
  "failure" : {
    "message" : "Exception: 完全校验失败！ Password do not allow null. ! = ",
    "stackTrace" : "self = <test_login.TestLogin object at 0x1114212e8>\ncase_data = {'address': '/postLogin', 'check': [{'check_type': 'entirely_check', 'expected_code': 400, 'expected_request': 'result.json'}], 'file': False, 'headers': {'Content-Type': 'application/json'}, ...}\n\n    @pytest.mark.parametrize(\"case_data\", case_dict[\"test_case\"])\n    @allure.story(\"登录\")\n    # @allure.issue(\"http://www.baidu.com\")  # bug地址\n    # @allure.testcase(\"http://www.testlink.com\")  # 用例连接地址\n    # @pytest.mark.flaky(reruns=3, reruns_delay=3)\n    def test_login(self, case_data):\n        \"\"\"\n        登录用例\n        :param case_data:\n        :return:\n        \"\"\"\n        # 参数化修改test_add_project 注释\n        for k, v in enumerate(case_dict[\"test_case\"]):  # 遍历用例文件中所有用例的索引和值\n            try:\n                if case_data == v:\n                    # 修改方法的__doc__在下一次调用时生效，此为展示在报告中的用例描述\n                    TestLogin.test_login.__doc__ = case_dict[\"test_case\"][k + 1][\"info\"]\n            except IndexError:\n                pass\n        # 发送测试请求\n>       api_send_check(case_data, case_dict, self.relevance, self.rel, PATH, self.result)\n\ntestcase/test_login.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ncommon/check_response.py:29: in api_send_check\n    check_result.check(case_data[\"test_name\"],i,code, data, relevance, _path, result)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ntest_name = 'password为空'\ncase_data = {'check_type': 'entirely_check', 'expected_code': 400, 'expected_request': 'result.json'}\ncode = 400, data = ''\nrelevance = {'auth': 'admin', 'email': 'wangjuan@user.com', 'password': '123456'}\n_path = '/Users/wangjuan/workpace/Aff_service/pages/login'\nsuccess = {'result': False}\n\n    def check(test_name, case_data, code, data, relevance, _path, success):\n        \"\"\"\n        校验测试结果\n        :param test_name: 测试用例\n        :param case_data: 测试用例\n        :param code: HTTP状态\n        :param data: 返回的接口json数据\n        :param relevance: 关联值对象\n        :param _path: case路径\n        :param success: 全局测试结果\n        :return:\n        \"\"\"\n        if case_data[\"check_type\"] == 'no_check':\n            with allure.step(\"不校验结果\"):\n                pass\n        elif case_data[\"check_type\"] == 'json':\n            expected_request = case_data[\"expected_request\"]\n            if isinstance(case_data[\"expected_request\"], str):\n                expected_request = read_json.read_json(test_name, expected_request, relevance, _path, success)\n            with allure.step(\"JSON格式校验\"):\n                allure.attach(\"期望code\", str(case_data[\"expected_code\"]))\n                allure.attach('期望data', str(expected_request))\n                allure.attach(\"实际code\", str(code))\n                allure.attach('实际data', str(data))\n            if int(code) == case_data[\"expected_code\"]:\n                if not data:\n                    data = \"{}\"\n                check_json.check_json(expected_request, data, success)\n            else:\n                success[\"result\"] = False\n                raise Exception(\"http状态码错误！\\n %s != %s\" % (code, case_data[\"expected_code\"]))\n    \n        elif case_data[\"check_type\"] == 'only_check_status':\n            with allure.step(\"校验HTTP状态\"):\n                allure.attach(\"期望code\", str(case_data[\"expected_code\"]))\n                allure.attach(\"实际code\", str(code))\n                allure.attach('实际data', str(data))\n            if int(code) == case_data[\"expected_code\"]:\n                pass\n            else:\n                success[\"result\"] = False\n                raise Exception(\"http状态码错误！\\n %s != %s\" % (code, case_data[\"expected_code\"]))\n    \n        elif case_data[\"check_type\"] == 'entirely_check':\n            expected_request = case_data[\"expected_request\"]\n            if isinstance(case_data[\"expected_request\"], str):\n                expected_request = read_json.read_json(test_name, expected_request, relevance, _path, success)\n            with allure.step(\"完全校验\"):\n                allure.attach(\"期望code\", str(case_data[\"expected_code\"]))\n                allure.attach('期望data', str(expected_request))\n                allure.attach(\"实际code\", str(code))\n                allure.attach('实际data', str(data))\n            if int(code) == case_data[\"expected_code\"]:\n                result = operator.eq(expected_request, data)\n                if result:\n                    pass\n                else:\n                    success[\"result\"] = False\n>                   raise Exception(\"完全校验失败！ %s ! = %s\" % (expected_request, data))\nE                   Exception: 完全校验失败！ Password do not allow null. ! =\n\ncommon/check_result.py:72: Exception"
  },
  "description" : {
    "value" : "\n        登录用例\n        :param case_data:\n        :return:\n        ",
    "type" : "TEXT"
  },
  "severity" : "NORMAL",
  "status" : "FAILED",
  "testId" : null,
  "suite" : {
    "uid" : "976e013d50702a1a",
    "name" : "test_login",
    "title" : "Test login"
  },
  "steps" : [ {
    "name" : "POST请求接口",
    "title" : "POST请求接口",
    "time" : {
      "start" : 1559291538370,
      "stop" : 1559291538371,
      "duration" : 1
    },
    "summary" : {
      "attachments" : 4,
      "steps" : 0
    },
    "status" : "PASSED",
    "attachments" : [ {
      "title" : "请求接口：",
      "source" : "b1431244-45dc-487a-af39-2d695374c380-attachment.txt",
      "type" : "text/plain",
      "size" : 14,
      "uid" : "d6eef53cbe85653"
    }, {
      "title" : "请求地址",
      "source" : "f6861a5d-c362-47ec-9cc0-34da36c0b115-attachment.txt",
      "type" : "text/plain",
      "size" : 46,
      "uid" : "519d96a2767c128e"
    }, {
      "title" : "请求头",
      "source" : "b5ac1187-a108-4bb9-a205-40777e186902-attachment.txt",
      "type" : "text/plain",
      "size" : 36,
      "uid" : "e49af0dbfae1cad3"
    }, {
      "title" : "请求参数",
      "source" : "795af3db-0e1f-4518-9f2d-1ec9573ce359-attachment.txt",
      "type" : "text/plain",
      "size" : 63,
      "uid" : "dad77518ab60dc2b"
    } ],
    "steps" : [ ]
  }, {
    "name" : "校验测试结果",
    "title" : "校验测试结果",
    "time" : {
      "start" : 1559291541175,
      "stop" : 1559291541175,
      "duration" : 0
    },
    "summary" : {
      "attachments" : 0,
      "steps" : 0
    },
    "status" : "PASSED",
    "attachments" : [ ],
    "steps" : [ ]
  }, {
    "name" : "完全校验",
    "title" : "完全校验",
    "time" : {
      "start" : 1559291544989,
      "stop" : 1559291544991,
      "duration" : 2
    },
    "summary" : {
      "attachments" : 4,
      "steps" : 0
    },
    "status" : "PASSED",
    "attachments" : [ {
      "title" : "期望code",
      "source" : "272f029c-1f6c-46b3-b16e-95daedccada0-attachment.txt",
      "type" : "text/plain",
      "size" : 3,
      "uid" : "5e064c660e329ad5"
    }, {
      "title" : "期望data",
      "source" : "02099ad0-fb70-48f5-8907-0683129addf4-attachment.txt",
      "type" : "text/plain",
      "size" : 27,
      "uid" : "1ec1d03efeb318c9"
    }, {
      "title" : "实际code",
      "source" : "fc7c2cb7-3a49-4d2c-b859-e09615ef38c7-attachment.txt",
      "type" : "text/plain",
      "size" : 3,
      "uid" : "a294326805c6fc73"
    }, {
      "title" : "实际data",
      "source" : "6de9f6b9-9545-4f39-9112-abf8388a1c07-attachment.txt",
      "type" : "text/plain",
      "size" : 0,
      "uid" : "3f798ea4cfb5d043"
    } ],
    "steps" : [ ]
  } ],
  "attachments" : [ ],
  "issues" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "用户登录场景"
  }, {
    "name" : "suite-name",
    "value" : "test_login"
  }, {
    "name" : "story",
    "value" : "登录"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "suite-title",
    "value" : null
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "thread",
    "value" : "20205-MainThread"
  }, {
    "name" : "host",
    "value" : "xiaoxideMacBook-Pro.local"
  }, {
    "name" : "language",
    "value" : "cpython3"
  } ],
  "parameters" : [ ]
}