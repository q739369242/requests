{
  "uid" : "2250a444e770bc8d",
  "name" : "TestLogin.test_login[password_success]",
  "title" : "Test login [password_success]",
  "time" : {
    "start" : 1560158791419,
    "stop" : 1560158800550,
    "duration" : 9131
  },
  "summary" : {
    "attachments" : 4,
    "steps" : 0
  },
  "failure" : {
    "message" : "TypeError: unsupported operand type(s) for +: 'dict' and 'str'",
    "stackTrace" : "self = <test_login.TestLogin object at 0x10f4f89e8>\ncase_data = {'address': '/postLogin', 'check': [{'check_type': 'entirely_check', 'expected_code': 200, 'expected_request': 'result.json'}], 'cookies': False, 'file': False, ...}\n\n    @pytest.mark.parametrize(\"case_data\", case_dict[\"test_case\"],\n                             ids=[\"password_success\", \"password_none\", \"password_error\"])\n    @allure.story(\"login\")\n    @pytest.mark.flaky(reruns=3, reruns_delay=3)\n    def test_login(self, case_data):\n        \"\"\"\n        登录用例\n        :param case_data: 测试用例\n        :return:\n        \"\"\"\n        self.rel = ini_relevance(PATH, \"relevance_login\")\n        self.init_relevance = ini_request(case_dict, self.rel, PATH)\n>       api_send_check(case_data, case_dict, self.init_relevance, self.rel, PATH)\n\ntestcase/test_login.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ncommon/Api_Send_Check.py:23: in api_send_check\n    project_dict[\"test_info\"].get(\"address\"), _path, relevance)\ncommon/send_resquest.py:29: in send_request\n    parameter = read_param.read_param(data[\"test_name\"], data[\"parameter\"], _path, relevance)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ntest_name = 'password正确', param = 'login.json'\n_path = {'auth': 'admin', 'email': 'wangjuan@user.com', 'password': '123456'}\nrelevance = '/Users/wangjuan/workpace/Aff_service/pages/login'\n\n    def read_param(test_name, param, _path, relevance=None):\n        \"\"\"\n        读取用例中参数parameter\n        :param test_name: 用例名称\n        :param param: parameter\n        :param relevance: 关联对象\n        :param _path: case路径\n        :param result: 全局结果\n        :return:\n        \"\"\"\n    \n        if isinstance(param, dict):\n            param = replace(param, relevance)\n        elif isinstance(param, list):\n            param = replace(param, relevance)\n        else:\n            try:\n>               with open(_path + \"/\" + param, \"r\", encoding=\"utf-8\") as f:\nE               TypeError: unsupported operand type(s) for +: 'dict' and 'str'\n\ncommon/read_param.py:29: TypeError"
  },
  "description" : {
    "value" : "\n        登录用例\n        :param case_data: 测试用例\n        :return:\n        ",
    "type" : "TEXT"
  },
  "severity" : "NORMAL",
  "status" : "FAILED",
  "testId" : null,
  "suite" : {
    "uid" : "b19be12a3bad6fd9",
    "name" : "test_login",
    "title" : "Test login"
  },
  "steps" : [ ],
  "attachments" : [ {
    "title" : "Captured log call",
    "source" : "d22e6153-01db-4423-859c-327eac9349e1-attachment.txt",
    "type" : "text/plain",
    "size" : 542,
    "uid" : "b7d0af1b9834b084"
  }, {
    "title" : "Captured log call",
    "source" : "25fa6eea-284c-4e98-9aaf-37713ff86e3f-attachment.txt",
    "type" : "text/plain",
    "size" : 542,
    "uid" : "141ec3786ecbef5b"
  }, {
    "title" : "Captured log call",
    "source" : "4847f8e1-5567-4ada-8869-a3025e35116f-attachment.txt",
    "type" : "text/plain",
    "size" : 542,
    "uid" : "801156cf2c2eee09"
  }, {
    "title" : "Captured log call",
    "source" : "61384556-ff97-4829-8231-cf32c416c057-attachment.txt",
    "type" : "text/plain",
    "size" : 542,
    "uid" : "e0eb67c013263352"
  } ],
  "issues" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "login"
  }, {
    "name" : "feature",
    "value" : "login"
  }, {
    "name" : "suite-name",
    "value" : "test_login"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "thread",
    "value" : "36759-MainThread"
  }, {
    "name" : "suite-title",
    "value" : null
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "host",
    "value" : "xiaoxideMacBook-Pro.local"
  }, {
    "name" : "language",
    "value" : "cpython3"
  } ],
  "parameters" : [ ]
}