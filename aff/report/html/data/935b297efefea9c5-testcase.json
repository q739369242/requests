{
  "uid" : "935b297efefea9c5",
  "name" : "TestLogin.test_login[password_error]",
  "title" : "Test login [password_error]",
  "time" : {
    "start" : 1559722263136,
    "stop" : 1559722263589,
    "duration" : 453
  },
  "summary" : {
    "attachments" : 9,
    "steps" : 2
  },
  "failure" : {
    "message" : "NameError: name 'case_data' is not defined",
    "stackTrace" : "self = <test_login.TestLogin object at 0x10f4a8438>\ncase_data = {'address': '/postLogin', 'check': [{'check_type': 'entirely_check', 'expected_code': 200, 'expected_request': 'result.json'}], 'cookies': False, 'file': False, ...}\n\n    @pytest.mark.parametrize(\"case_data\", case_dict[\"test_case\"],\n                             ids=[\"password_success\", \"password_none\", \"password_error\"])\n    @allure.story(\"login\")\n    # @pytest.mark.flaky(reruns=3, reruns_delay=3)\n    def test_login(self, case_data):\n        \"\"\"\n        登录用例\n        :param case_data:\n        :return:\n        \"\"\"\n        # 参数化修改test_add_project 注释\n        for k, v in enumerate(case_dict[\"test_case\"]):  # 遍历用例文件中所有用例的索引和值\n            try:\n                if case_data == v:\n                    # 修改方法的__doc__在下一次调用时生效，此为展示在报告中的用例描述\n                    TestLogin.test_login.__doc__ = case_dict[\"test_case\"][k + 1][\"info\"]\n            except IndexError:\n                pass\n        # 发送测试请求\n>       api_send_check(case_data, case_dict, self.relevance, self.rel, PATH)\n\ntestcase/test_login.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncase = {'address': '/postLogin', 'check': [{'check_type': 'entirely_check', 'expected_code': 200, 'expected_request': 'result.json'}], 'cookies': False, 'file': False, ...}\nproject_dict = {'premise': None, 'test_case': [{'address': '/postLogin', 'check': [{'check_type': 'entirely_check', 'expected_code': ... False, ...}], 'testinfo': {'address': '/postLogin', 'host': '${debug_pre}$', 'id': 'test_01_login', 'title': 'login'}}\nrelevance = {'auth': 'admin', 'email': 'wangjuan@user.com', 'password': '123456'}\nrel = {'auth': 'admin', 'email': 'wangjuan@user.com', 'password': '123456'}\n_path = '/Users/wangjuan/workpace/Aff_service/pages/login'\n\n    def api_send_check(case, project_dict, relevance, rel, _path):\n        \"\"\"\n        接口请求并校验结果\n        :param case: 单条用例\n        :param project_dict: 用例文件对象\n        :param relevance: 关键值实例对象\n        :param rel: 关联值类对象\n        :param _path: case目录\n        :return:\n        \"\"\"\n        code, data = send_resquest.send_request(case, project_dict[\"testinfo\"].get(\"host\"),\n                                                project_dict[\"testinfo\"].get(\"address\"), relevance, _path)\n        # with allure.step(\"校验测试结果\"):\n        #     pass\n        if isinstance(case[\"check\"], list):\n            for i in case[\"check\"]:\n                check_result.check(case[\"test_name\"], i, code, data, relevance, _path)\n        else:\n            check_result.check(case[\"test_name\"], case[\"check\"], code, data, relevance, _path)\n    \n>       ini_request(data, case_data[\"relevance\"], rel)\nE       NameError: name 'case_data' is not defined\n\ncommon/check_response.py:33: NameError"
  },
  "description" : {
    "value" : "password错误",
    "type" : "TEXT"
  },
  "severity" : "NORMAL",
  "status" : "FAILED",
  "testId" : null,
  "suite" : {
    "uid" : "ff3d25676f9772dc",
    "name" : "test_login",
    "title" : "Test login"
  },
  "steps" : [ {
    "name" : "POST请求接口",
    "title" : "POST请求接口",
    "time" : {
      "start" : 1559722263140,
      "stop" : 1559722263140,
      "duration" : 0
    },
    "summary" : {
      "attachments" : 4,
      "steps" : 0
    },
    "status" : "PASSED",
    "attachments" : [ {
      "title" : "请求接口：",
      "source" : "e7db77a0-facf-41f3-98e5-c1836bde2e70-attachment.txt",
      "type" : "text/plain",
      "size" : 14,
      "uid" : "fc6b9443cfa085a0"
    }, {
      "title" : "请求地址",
      "source" : "08f63894-9497-4bda-bfeb-cae78dd7554c-attachment.txt",
      "type" : "text/plain",
      "size" : 46,
      "uid" : "cb8ff539e1f1bb8f"
    }, {
      "title" : "请求头",
      "source" : "0234e3b6-cfcd-4191-b473-02578e799d05-attachment.txt",
      "type" : "text/plain",
      "size" : 38,
      "uid" : "194211bc9a3b9cc5"
    }, {
      "title" : "请求参数",
      "source" : "08ec3527-fdf7-4759-a2d0-ea497d52b3af-attachment.txt",
      "type" : "text/plain",
      "size" : 63,
      "uid" : "529f036c6324168"
    } ],
    "steps" : [ ]
  }, {
    "name" : "完全校验",
    "title" : "完全校验",
    "time" : {
      "start" : 1559722263583,
      "stop" : 1559722263583,
      "duration" : 0
    },
    "summary" : {
      "attachments" : 4,
      "steps" : 0
    },
    "status" : "PASSED",
    "attachments" : [ {
      "title" : "期望code",
      "source" : "31344a79-a289-46fc-915e-991b86f6c942-attachment.txt",
      "type" : "text/plain",
      "size" : 3,
      "uid" : "d74cb265483418c2"
    }, {
      "title" : "期望data",
      "source" : "fdf81cf1-1320-4abe-8931-2515a7f1d0c1-attachment.txt",
      "type" : "text/plain",
      "size" : 60,
      "uid" : "64896a34e222e7f2"
    }, {
      "title" : "实际code",
      "source" : "35c06608-3bba-45a6-9a16-3eb4a2b61631-attachment.txt",
      "type" : "text/plain",
      "size" : 3,
      "uid" : "b957454a6d9c7f4d"
    }, {
      "title" : "实际data",
      "source" : "c68f5899-b972-4d76-a5d9-80e25009f383-attachment.txt",
      "type" : "text/plain",
      "size" : 60,
      "uid" : "1ee941057cf3e71b"
    } ],
    "steps" : [ ]
  } ],
  "attachments" : [ {
    "title" : "Captured log call",
    "source" : "877aa48f-b1b4-4d28-a1f5-2bcf12ca69cc-attachment.txt",
    "type" : "text/plain",
    "size" : 1250,
    "uid" : "6afb43567c79aaf7"
  } ],
  "issues" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "login"
  }, {
    "name" : "feature",
    "value" : "login"
  }, {
    "name" : "suite-name",
    "value" : "test_login"
  }, {
    "name" : "thread",
    "value" : "30229-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "suite-title",
    "value" : null
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "host",
    "value" : "xiaoxideMacBook-Pro.local"
  }, {
    "name" : "language",
    "value" : "cpython3"
  } ],
  "parameters" : [ ]
}